.64
.64
mypdf
integrate(mypdf,0,1.6)
sqrt(2)
.997*.001
(1-.985)*(1-.001)
.997*.001/((1-.985)*(1-.001)+.997*.001)
(1+2+3+4+5+6)/6
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
(edh+edl)/2
integrate(myfunc, 0 ,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
dice_sqr
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair - 3.5^2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
temp$X*temp$Prob
temp[1,]*temp[2,]
sum(temp[1,]*temp[2,])
.75*.3/(.75*.3+.7*.48)
swirl()
choose(5,3)*.8^3*.2^2
choose(5,3)*.8^3*.2^2+choose(5,4)*.8^4*.2^1+choose(5,5)*.8^5*.2^0
pbinom(2,5,prob = .8,lower.tail = FALSE)
qnorm(.1)
0
qnorm(.975,3,2)
1.96*2+3
pnorm(1200,1020,50,lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail = FALSE)
qnorm(.75,1020,50,lower.tail = TRUE)
.53
.53
ppois(3,2.5*4)
pbinom(5,1000,.01)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(.95)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*(1-.6)/100)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb<-5/94.32
lamb+c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
pnorm(70,80,10,lower.tail = TRUE)
qnorm(.95,1100,75)
qnorm(.95,1100,75/sqrt(100))
pbinom(4,5,.5,lower.tail = F)
pnorm(16,15,10/sqrt(100))-pnorm(16,15,10/sqrt(100))
pnorm(16,15,10/sqrt(100))-pnorm(14,15,10/sqrt(100))
ppois(10,5*3)
pbinom(3,5,.5,lower.tail = F)
swirl
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
g1
range(g1)
range(g2)
difference <- g2-g1
mean(difference)
s <- sd(difference)
mn+c(-1,1)*qt(.975,10-1)*mn/sqrt(10)
mn+c(-1,1)*qt(.975,10-1)*s/sqrt(10)
mn+c(-1,1)*qt(.975,10-1)*s/sqrt(10)
mn+c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(difference)$conf.int
(8-1)*15.34^2+(21-1)*18.23
sp<-(8-1)*15.34^2+(21-1)*18.23
sp<-(8-1)*15.34^2+(21-1)*18.23^2
ns<-8-1+21-1
sp<-sqrt(sp/ns)
(132.86*(8-1)+127.44*(21-1))/ns+c(-1,1)*qt(.975,ns)*sp*sqrt(1/(8-1)+1/(21-1))
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp<-sqrt((var(g1)*(10-1)+var(g2)*(10-1))/(18))
sp<-sqrt((var(g1)*(10-1)+var(g2)*(10-1))/18)
sp<-sqrt((var(g1)*9+var(g2)*9)/18)
sp<-sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*qt(.975,18)*sp*sqrt(1/10+1/10)
t.test(g2,g1,paired = F,var.equal = T)$conf
t.test(g2,g1,paired = FALSE,var.equal = TRUE)$conf
t.test(g2,g1,paired = TRUE)$conf
num<-(15.34^2/8+18.23^2/21)^2
den<-(15.34^2/8)^2/(8-1)+(18.23^2/21)^2/(21-1)
mydf<-num/den
132.86-127.44+c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
10/sqrt(100)
(32-30)/1
swirl()
?clear
q()
library(swirl)
swirl()
swirl()
1
q()
q()
library(swirl)
swirl()
32-30
swirl()
1
q()
library(swirl)
swirl()
pt(2.5,15,lower.tail = FALSE)
qnorm(.95)
install.packages(c("boot", "chron", "class", "cluster", "codetools", "dplyr", "foreign", "httpuv", "httr", "KernSmooth", "lattice", "manipulate", "maps", "MASS", "Matrix", "mgcv", "nlme", "nnet", "plyr", "R6", "Rcpp", "RCurl", "rJava", "RMySQL", "rpart", "spatial", "stringi", "survival", "testthat", "XML"))
plot(fs)
ver
version
ggplot2
?t.test
qt(.975,8)
1100+c(-1,1)*qt(.975,9-1)*30/sqrt(9)
--2
--2*sqrt(9)/qt(.975,9-1)
k <- 1000xvals <- seq(-5, 5, length = k)myplot <- function(df){    d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),                    x = xvals,                    dist = factor(rep(c("Normal", "T"), c(k,k))))    g <- ggplot(d, aes(x = x, y = y))    g <- g + geom_line(size = 2, aes(colour = dist))    g}manipulate(myplot(mu), mu = slider(1, 20, step = 1))
k <- 1000
xvals <- seq(-5, 5, length = k)
myplot <- function(df){
d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),
x = xvals,dist = factor(rep(c("Normal", "T"), c(k,k))))
myplot <- function(df){
+ d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),
+ dist = factor(rep(c("Normal", "T"), c(k,k))))
myplot <- function(df){    d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),                    x = xvals,                    dist = factor(rep(c("Normal", "T"), c(k,k))))    g <- ggplot(d, aes(x = x, y = y))    g <- g + geom_line(size = 2, aes(colour = dist))    g}manipulate(myplot(mu), mu = slider(1, 20, step = 1))
myplot <- function(df){    d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),                    x = xvals,                    dist = factor(rep(c("Normal", "T"), c(k,k))))    g <- ggplot(d, aes(x = x, y = y))    g <- g + geom_line(size = 2, aes(colour = dist))    g}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?manipulate
data(sleep)
head(sleep)
t.test(3-5,var.equal = F)$conf
install.packages("devtools")
devtools::install_github("hadley/plyr")
library(ggplot2)
x <- seq(-8,8, length = 2000)
dat <- data.frame(x=x, y=dnorm(x,sd=2))
g <- ggplot(dat, aes(x = x, y = y)) + geom_line(size = 1.5)+scale_y_continuous(limits=c(0,max(dat$y)))
g <- g + layer("area", mapping = aes( x=ifelse(x>qnorm(.95,sd=2),x,NA)), geom_params=list(fill="red",alpha=.5))
print(g)
library(ggplot2)
x <- seq(-8,8, length = 2000)
dat <- data.frame(x=x, y=dnorm(x,sd=2))
g <- ggplot(dat, aes(x = x, y = y)) + geom_line(size = 1.5)+scale_y_continuous(limits=c(0,max(dat$y)))
g <- g + layer("area", mapping = aes( x=ifelse(x>qnorm(.95,sd=2),x,NA)), geom_params=list(fill="red",alpha=.5))
print(g)
library(ggplot2)
x <- seq(-8,8, length = 2000)
dat <- data.frame(x=x, y=dnorm(x,sd=2))
g <- ggplot(dat, aes(x = x, y = y)) + geom_line(size = 1.5)+scale_y_continuous(limits=c(0,max(dat$y)))
g <- g + layer("area", mapping = aes( x=ifelse(x>qnorm(.95,sd=2),x,NA)), geom_params=list(fill="red",alpha=.5))
print(g)
library(swirl)
swirl()
10/sqrt(100)
32-30
(32-30)/(10/sqrt(16))
16-1
qt(.95,15)
dim(fs)
t.test(fs$sheight-fs$fheight)
11.7885*sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
mybin[8]
mybin[9]
mybin[7]
.035
.144
8
pt(q = 2.5,df = 15,lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2,lower.tail = FALSE)
mybin
pbinom(6,size = 8,prob = .5,lower.tail = FALSE)
pbinom(7,size = 8,prob = .5,lower.tail = TRUE)
ppois(9,lambda = 5,lower.tail = FALSE)
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(.95)
pnorm(30+z,mean = 30,lower.tail = FALSE)
pnorm(30+z,mean = 32,lower.tail = FALSE)
pnorm(30+z,mean = 32,sd = 1,lower.tail = FALSE)
pnorm(30+z*2,mean = 32,sd = 2,lower.tail = FALSE)
power.t.test(n = 16,delta = 2/4,sd = 1,type = "one.sample",alt="one.sided")$power
power.t.test(n = 16,delta = 2,sd = 4,type = "one.sample",alt="one.sided")$power
power.t.test(n = 16,delta = 100,sd = 200,type = "one.sample",alt="one.sided")$power
power.t.test(power = .8,delta = 2/4,sd = 1,type = "one.sample",alt="one.sided")$n
power.t.test(power = .8,delta = 2,sd = 4,type = "one.sample",alt="one.sided")$n
power.t.test(power = .8,delta = 100,sd = 200,type = "one.sample",alt="one.sided")$n
power.t.test(power = .8,n=26,sd = 1,type = "one.sample",alt="one.sided")$delta
power.t.test(power = .8,n=27,sd = 1,type = "one.sample",alt="one.sided")$delta
head(pValues)
sum(pValues<.05)
sum(p.adjust(pValues,method = "bonferroni")<.05)
sum(p.adjust(pValues,method = "BH")<.05)
tail(trueStatus)
table(pValues2<.05,trueStatus)
24/1000
24/500
table(p.adjust(pValues2,method = "bonferroni")<.05,trueStatus)
table(p.adjust(pValues2,method = "BH")<.05,trueStatus)
df<-(.6^2/10+.68^2/10)^2/((.6^2/10)^2/(10-1)+(.68^2/10)^2/(10-1))
3-5+c(1,-1)*qt(.975,df)*sqrt(.6^2/10-.68^2/10)
3-5+c(1,-1)*qt(.975,df)*sqrt(.6^2/10+.68^2/10)
s2<-((10-1)*.6^2+(10-1)*.68^2)/(10+10-2)
s<-sqrt(s2)
3-5+c(1,-1)*qt(.975,10+10-2)*s*sqrt(1/10+1/10)
s
df<-(.6/10+.68/10)^2/((.6/10)^2/(10-1)+(.68/10)^2/(10-1))
3-5+c(1,-1)*qt(.975,df)*sqrt(.6/10-.68/10)
3-5+c(1,-1)*qt(.975,df)*sqrt(.6/10+.68/10)
s<-sqrt(((9-1)*1.8^2+(9-1)*1.5^2)/(9+9-2))
-3-1+c(1,-1)*qnorm(.95)*s*sqrt(1/9+1/9)
-3-1+c(1,-1)*qnorm(.95,-1,s)*s*sqrt(1/9+1/9)
-3-1+c(1,-1)*qt(.95,9+9-2)*s*sqrt(1/9+1/9)
q()
setwd("~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData")
?download
?download.files
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
unlink(zipfile)
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
unlink(folder)
??folder
?dir.exist
?dir
??dir.exist
??dir
?dir.exists
ver
version
file.exists(folder)
?unlink
unlink(folder)
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
??read
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
dir
dir()
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
dim(X_train)
str(X_train)
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
str(X_test)
?X
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
7352+2947
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
head(features)
?read.table
str(features)
?grep
tail(features)
tail(features,10)
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
str(features)
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
str(features)
?names
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
str(features)
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
str(X)
names(X)
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
etracts
extracts
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
extracts
extracts <- grep("mean(){6}|std()", features)
extracts <- grep("mean()|std()|Mean", features)
X <- X[ , extracts]
names(X)
?dat
?as.factor
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
str(y_train)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
y <- rbind(y_train, y_test)
str(y)
y_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
str(y_labels)
y <- factor(y, y_labels[ , 1], y_labels[ , 2])
head(y)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt",
colClasses = "character")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt",
colClasses = "character")
y <- rbind(y_train, y_test)
y_labels <- read.table("UCI HAR Dataset/activity_labels.txt",
colClasses = "character")
y <- factor(y, y_labels[ , 1], y_labels[ , 2])
str(y)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt",
colClasses = "character")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt",
colClasses = "character")
y <- rbind(y_train, y_test)
y_labels <- read.table("UCI HAR Dataset/activity_labels.txt",
colClasses = "character")
str(y)
str(y_labels)
lab<-factor(y_labels)
lab<-factor(y_labels$V2,y_labels$V1)
lab
lab<-as.factor(y)
lab<-factor(y)
lab<-factor(y, y_labels[ , 1], y_labels[ , 2],ordered = F)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
y <- rbind(y_train, y_test)
y_labels <- read.table("UCI HAR Dataset/activity_labels.txt")[ , 2]
y_labels <- read.table("UCI HAR Dataset/activity_labels.txt",
colClasses = "character")[ , 2]
y <- y_labels[y]
y_labels[c(2,1,5,4,3,6,4,5)]
str(y)
?as.vector
y <- as.vector(y)
str(y)
?as.array
y <- as.array(y)
y <- y_labels[y[,1]]
head(y)
head(y_train)
tail(y_test)
tail(y)
y <- as.factor(y)
head(y)
head(y_train)
names(y) <- "activities"
str(y)
y <- rbind(y_train, y_test)
names(y) <- "activities"
str(y)
y <- y_labels[y[ , 1]]
str(y)
y <- as.factor(y)
str(y)
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
subject <- rbind(subject_train, subject_test)
dataset <- cbind(subject, y, X)
str(dataset)
names(dataset$y)<-"activities"
str(dataset)
y <- rbind(y_train, y_test)
names(y) <- "activites"
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
subject <- rbind(subject_train, subject_test)
names(subject) <- "subjects"
dataset <- cbind(subject, y, X)
head(names(dataset)
)
dataset$activites <- y_labels[dataset$activites]
head(dataset$activites)
tail(dataset$activites)
str(dataset$activites)
dataset$activites <- as.factor(y_labels[dataset$activites])
str(dataset$activites)
tail(dataset$activites)
dataset$activites <- y_labels[dataset$activites]
dataset$activites <- as.factor(dataset$activites)
tail(dataset$activites)
y <- rbind(y_train, y_test)
names(y) <- "activities"
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
subject <- rbind(subject_train, subject_test)
names(subject) <- "subjects"
dataset <- cbind(subject, y, X)
head(names(dataset))
head(dataset$activities)
dataset$activities <- y_labels[dataset$activities]
head(dataset$activities)
str(dataset$activities)
?as.factor
y <- as.factor(y)
y <- as.factor(y$V1)
head(y)
names(y)
y <- rbind(y_train, y_test)
names(y)
y <- as.factor(y$V1)
y
y <- rbind(y_train, y_test)
y$V1 <- as.factor(y$V1)
y
dataset$activities <- as.factor(dataset$activities)
str(dataset)
dataset$activities
head(dataset$activities)
subject$subjects <- as.factor(subject$subjects)
dataset <- cbind(subject, y, X)
str(dataset)
library(dplyr)
?ddply
?dply
?dplyr
detach("package:dplyr", unload=TRUE)
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?ddply
?tapply
tidydataset <- ddply(dataset, .(subjects, activities), mean)
dataset <- cbind(subject, y, X)
tidydataset <- ddply(dataset, .(subjects, activities), mean)
tidydataset <- ddply(dataset, .(subjects), mean)
warnings()
head(tidydataset)
library(dplyr)
?group_by
a <- group_by(dataset,subjects)
head(a)
names(y) <- "activities"
dataset <- cbind(subject, y, X)
tidydataset <- ddply(dataset, .(subjects, activities), mean)
head(tidydataset)
tidydataset <- ddply(dataset, .(subjects, activities), summarise)
tidydataset <- ddply(dataset, .(subjects, activities), summarise, mean)
tidydataset <- ddply(dataset, .(subjects), summarise)
?summarize
detach("package:plyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
?summarise
?summarize
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
tidy <- summarise(dataset)
tidy <- summarise(dataset, mean)
?summarise
?mean
tidy<-tapply(dataset,INDEX = "subjects", mean)
tidy<-tapply(dataset,INDEX = "subjects", FUN = mean)
tidy<-tapply(dataset, FUN = mean)
tidy<-tapply(dataset, INDEX = dataset$activites, FUN = mean)
tidy<-tapply(dataset, INDEX = dataset$subjects, FUN = mean)
tidy<-tapply(dataset$tBodyAcc-mean()-Y, INDEX = dataset$subjects, FUN = mean)
tidy<-tapply(X = dataset$tBodyAcc-mean()-Y, INDEX = dataset$subjects, FUN = mean)
tidy<-tapply(X = dataset$tBodyAcc-mean()-Y, INDEX = dataset$subjects, FUN = mean())
tidy<-tapply(X = dataset$tBodyAcc-mean()-Y, INDEX = dataset$subjects, FUN = mean(dataset))
tidy<-tapply(X = dataset$tBodyAcc-mean()-Y, INDEX = dataset$subjects, FUN = mean(dataset))
detach("package:dplyr", unload=TRUE)
library(plyr)
?ddply
library(reshape2)
?dcast
?melt
meltdataset <- melt(dataset, id.vars = c("subjects", "activities"),
measure.vars = -c("subjects", "activities"))
?end
?End
??end
meltdataset <- melt(dataset, id.vars = c("subjects", "activities"),
measure.vars = names(dataset)[3:end])
meltdataset <- melt(dataset, id.vars = c("subjects", "activities"),
measure.vars = names(dataset)[3:88])
86*10299
head(meltdataset)
dataset <- melt(dataset, id.vars = c("subjects", "activities"),
measure.vars = names(dataset)[3:88])
tidydataset <- ddply(dataset, .(subjects, activities), summarize,
average = mean(value))
head(tidydataset)
tidydataset <- ddply(dataset, .(subjects, activities, variable), summarize,
average = mean(value))
head(tidydataset)
30*6*86
?write.table
detach("package:plyr", unload=TRUE)
detach("package:reshape2", unload=TRUE)
dir()
wd()
source('~/Copy/Coursera/Data Science Specialization/Getting and Cleaning Data/PA/GettingAndCleaningData/run_analysis.R')
